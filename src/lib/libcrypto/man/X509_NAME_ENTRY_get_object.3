.\"	$OpenBSD: X509_NAME_ENTRY_get_object.3,v 1.3 2016/12/05 12:07:57 schwarze Exp $
.\"	OpenSSL aebb9aac Jul 19 09:27:53 2016 -0400
.\"
.\" This file was written by Dr. Stephen Henson <steve@openssl.org>.
.\" Copyright (c) 2002, 2005, 2006 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 5 2016 $
.Dt X509_NAME_ENTRY_GET_OBJECT 3
.Os
.Sh NAME
.Nm X509_NAME_ENTRY_get_object ,
.Nm X509_NAME_ENTRY_get_data ,
.Nm X509_NAME_ENTRY_set_object ,
.Nm X509_NAME_ENTRY_set_data ,
.Nm X509_NAME_ENTRY_create_by_txt ,
.Nm X509_NAME_ENTRY_create_by_NID ,
.Nm X509_NAME_ENTRY_create_by_OBJ
.Nd X509_NAME_ENTRY utility functions
.Sh SYNOPSIS
.In openssl/x509.h
.Ft ASN1_OBJECT *
.Fo X509_NAME_ENTRY_get_object
.Fa "X509_NAME_ENTRY *ne"
.Fc
.Ft ASN1_STRING *
.Fo X509_NAME_ENTRY_get_data
.Fa "X509_NAME_ENTRY *ne"
.Fc
.Ft int
.Fo X509_NAME_ENTRY_set_object
.Fa "X509_NAME_ENTRY *ne"
.Fa "ASN1_OBJECT *obj"
.Fc
.Ft int
.Fo X509_NAME_ENTRY_set_data
.Fa "X509_NAME_ENTRY *ne"
.Fa "int type"
.Fa "const unsigned char *bytes"
.Fa "int len"
.Fc
.Ft X509_NAME_ENTRY *
.Fo X509_NAME_ENTRY_create_by_txt
.Fa "X509_NAME_ENTRY **ne"
.Fa "const char *field"
.Fa "int type"
.Fa "const unsigned char *bytes"
.Fa "int len"
.Fc
.Ft X509_NAME_ENTRY *
.Fo X509_NAME_ENTRY_create_by_NID
.Fa "X509_NAME_ENTRY **ne"
.Fa "int nid"
.Fa "int type"
.Fa "unsigned char *bytes"
.Fa "int len"
.Fc
.Ft X509_NAME_ENTRY *
.Fo X509_NAME_ENTRY_create_by_OBJ
.Fa "X509_NAME_ENTRY **ne"
.Fa "ASN1_OBJECT *obj"
.Fa "int type"
.Fa "const unsigned char *bytes"
.Fa "int len"
.Fc
.Sh DESCRIPTION
.Fn X509_NAME_ENTRY_get_object
retrieves the field name of
.Fa ne
in an
.Vt ASN1_OBJECT
structure.
.Pp
.Fn X509_NAME_ENTRY_get_data
retrieves the field value of
.Fa ne
in an
.Vt ASN1_STRING
structure.
.Pp
.Fn X509_NAME_ENTRY_set_object
sets the field name of
.Fa ne
to
.Fa obj .
.Pp
.Fn X509_NAME_ENTRY_set_data
sets the field value of
.Fa ne
to string type
.Fa type
and the value determined by
.Fa bytes
and
.Fa len .
.Pp
.Fn X509_NAME_ENTRY_create_by_txt ,
.Fn X509_NAME_ENTRY_create_by_NID ,
and
.Fn X509_NAME_ENTRY_create_by_OBJ
create and return an
.Vt X509_NAME_ENTRY
structure.
.Pp
.Fn X509_NAME_ENTRY_get_object
and
.Fn X509_NAME_ENTRY_get_data
can be used to examine an
.Vt X509_NAME_ENTRY
function as returned by
.Xr X509_NAME_get_entry 3
for example.
.Pp
.Fn X509_NAME_ENTRY_create_by_txt ,
.Fn X509_NAME_ENTRY_create_by_OBJ ,
.Fn X509_NAME_ENTRY_create_by_NID ,
and
.Fn X509_NAME_ENTRY_set_data
are seldom used in practice because
.Vt X509_NAME_ENTRY
structures are almost always part of
.Vt X509_NAME
structures and the corresponding X509_NAME functions are typically
used to create and add new entries in a single operation.
.Pp
The arguments of these functions support similar options to the
similarly named ones of the corresponding X509_NAME functions such as
.Xr X509_NAME_add_entry_by_txt 3 .
So for example
.Fa type
can be set to
.Dv MBSTRING_ASC ,
but in the case of
.Fn X509_NAME_ENTRY_set_data
the field name must be set first so the relevant field information
can be looked up internally.
.Sh SEE ALSO
.Xr d2i_X509_NAME 3 ,
.Xr ERR_get_error 3 ,
.Xr OBJ_nid2obj 3
